name: '🏗️ Build mod'
run-name: >
  build ${{github.repository}} #${{ github.run_number }}

on:
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: jcdcdev.Eco.Core
      PROJECT_PATH: ./src/jcdcdev.Eco.Core/jcdcdev.Eco.Core.csproj
      BUILD_OUTPUT: ./build-output
      MOD_OUTPUT: ./build-assets/Mods/jcdcdev.Eco.Core
      ASSET_NAME: jcdcdev.Eco.Core-dev-${{ github.sha }}
      ARTIFACT_OUTPUT: ./build-assets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - name: Build project
        run: dotnet build ${{ env.PROJECT_PATH }} -o ${{ env.BUILD_OUTPUT }} --configuration Release
      - name: Copy Assets
        run: |
          mkdir --parents "${{ env.MOD_OUTPUT }}"
          cp "${{ env.BUILD_OUTPUT }}/${{ env.PROJECT_NAME }}.dll" "${{ env.MOD_OUTPUT }}"      
      - uses: vimtor/action-zip@v1
        with:
          files: ${{ env.ARTIFACT_OUTPUT }}
          dest: ${{ env.ASSET_NAME }}.zip
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_NAME }}
          path: ${{ env.ASSET_NAME }}.zip
